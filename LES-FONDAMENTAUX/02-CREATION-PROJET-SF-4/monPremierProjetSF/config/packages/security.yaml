security:
    encoders:
        App\Entity\Auteur: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        auteur_provider:
            entity:
                class: App\Entity\Auteur
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            #access_denied_handler: App\Security\AccessDeniedHandler
            anonymous: true
            form_login:
              login_path: security_connexion
              check_path: security_connexion
            http_basic: ~
            provider: auteur_provider
            logout_on_user_change: true
            logout:
              path:   /deconnexion
              target: /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_AUTEUR: ROLE_MEMBRE
        ROLE_ADMIN: [ROLE_AUTEUR, ROLE_ALLOWED_TO_SWITCH]
